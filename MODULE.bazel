module(
    name = "spanner_bazel_repro",
    version = "1.0",
)

bazel_dep(name = "gazelle", version = "0.39.0", repo_name = "bazel_gazelle")
bazel_dep(name = "googleapis", version = "0.0.0-20240326-1c8d509c5", repo_name = "com_google_googleapis")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "protobuf", version = "23.1", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_go", version = "0.50.1", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_java", version = "7.6.5")


# googleapis
# ==========

switched_rules = use_extension("@com_google_googleapis//:extensions.bzl", "switched_rules")
switched_rules.use_languages(
    gapic = False,
    go = True,
    grpc = False,
)

# rules_go
# ========

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.1")
use_repo(
    go_sdk,
    "go_toolchains",
    "io_bazel_rules_nogo",
)

# Update Go deps with:
#     bazelisk run @io_bazel_rules_go//go -- mod tidy -v
go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_google_cloud_go_spanner",
)

go_deps.gazelle_default_attributes(
    directives = [
        "gazelle:proto disable_global",
    ],
)

go_deps.gazelle_override(
    # Force Gazelle to wipe out the existing build files before regenerate them.
    build_file_generation = "clean",
    directives = [
        "gazelle:resolve proto go google/rpc/status.proto @org_golang_google_genproto_googleapis_rpc//status",
        "gazelle:resolve proto proto google/rpc/status.proto @googleapis//google/rpc:status_proto",
    ],
    path = "cel.dev/expr",
)
